window.onload = function () {

    /* 
         객체는 왜 필요한가?
          : 값(프로퍼티)을 그룹화 하여 사용하기 위해 필요하다.
          
         1. 객체 용어
           1) 객체: 실생활에서 우리가 인식할 수 있는 사물

           2) 프로그래밍에서의 객체
               : 이름(key)과 값(value)으로 구성된 프로퍼티(property)의 집합이다.

               -> 기본타입(숫자, 문자, 불린, null, undefined)을 제외한 모든 타입은 객체이다.

           3) 프로퍼티(= 속성)
               : '이름(key)'과 '값(value)'으로 구성되며, 그중 함수 자료형을 갖는 값을 
                 '메서드(기능)'라고 한다.

           4) 객체 생성
               -> let 변수명 = { key: value }; 의 형태로 나타낸다. 

           5) 객체의 프로퍼티 참조
               ① 객체이름.프로퍼티이름(일반적)
               ② 객체이름["프로퍼티이름"] 
               
         2. 객체 생성하기   
           1) Object()생성자 함수 이용하는 방법(잘 사용하지 않음) 
           2) 리터럴표기를 이용하는 방법(일반적)
           3) 생성자 함수를 이용하는 방법
           4) class 키워드를 이용하는 방법   
               
         3. 배열과 객체의 차이
           (공통점)    
            - 둘다 참조타입(= 객체) 

           (차이점)
            - 배열은 요소에 접근할 때 '인덱스(index)'를 사용한다.
            - 객체는 'key'를 사용한다.       
    */

    /* 객체 생성1 - Object()생성자 함수 이용하는 방법 */
    let foo = Object();


    /* 객체 생성2 - 리터럴 표기를 이용하는 방법, (객체 리터럴이라고 함) */
    let obj = {

        keyA: "값A",
        keyB: "값B",
        keyC: "값C",
        keyD: "값D",
        keyE: function () {
            return this.keyA + this.keyB;
        }
    };

    // 출력 
    console.log(foo);
    console.log(obj);





    
}

