<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <script>
     /*
      브라우저 객체 모델(BOM)
       : 웹 브라우저와 관련된 객체의 집합을 의미한다. 
         브라우저 객체 모델: window, location, navigator, history, screen, document
         여기서는 document(문서객체모델에서 다룸)제외한 window, location, navigator, history, screen 객체를 다룸 

          window: 웹 브라우저의 창(window)을 나타내는 객체로, 대부분의 웹 브라우저에서 지원
          location: 현재 브라우저에 표시된 HTML 문서의 주소를 얻거나, 브라우저에 새 문서를 불러올 때 사용하는 객체 
          navigator: 브라우저 공급자 및 버전 정보 등을 포함한 브라우저에 대한 다양한 정보를 저장하는 객체 
          history: 브라우저의 히스토리(기록과 관련된) 정보를 문서와 문서 상태 목록으로 저장하는 객체 
          screen: 화면 전체와 관련된 객체
          document: HTML문서와 관련된 객체(웹페이지 그 자체를 의미)

          # 객체의 속성과 메서드는 책을 통해 살펴보자! (문서객체가 더 중요!)
     */
     
      // window 객체의 속성 알아보기
    let output = '';
    for(let key in window) {
        output += '●'+ key + ':' + window[key] +'\n';
    }
    console.log(output);
//  => window 객체는 위의 결과처럼 많은 속성과 메서드가 있다. 

  /* 
  window 새 창 열기(= 팝업창 열기)
   : open()메서드를 이용하면, 새로운 브라우저 창을 열 수 있다. 
   open()메서드의 옵션(p299 참조)
  */

  window.open('http://hanbit.co.kr','child', 'width=800, height=400', 'true');

//==================================================================================================================

   
   // open()메서드는 원도우 객체(새 창)에 접근하여 속성과 메서드를 사용할 수 있다. 
   let child = window.open('','','width=500, height=700');
   child.document.write('<h1> 새 창을 엽니다. </h1>');

   // 상대 이동(-By형태의 메서드)과 절대(-To형태의 메서드) 이동의 차이  
   let win = window.open('','','width=300, height=300');
   
   // 1초마다 함수를 실행합니다.
   setInterval(function(){
       win.moveBy(10, 10);
   }, 1000);  // 상대 이동(입력한 크기만큼 늘어남)

   setInterval(function(){
    child.moveTo(10, 10);
   }, 1000); // 절대 이동(입력한 크기만큼 움직임)

    </script>
</head>
<body>
    
</body>
</html>